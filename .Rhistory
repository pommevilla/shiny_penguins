step_dummy(all_nominal(), -all_outcomes()) %>%
step_impute_median(all_predictors()) %>%
step_normalize(all_predictors())
# Chunk 6
tidy_boosted_model <- boost_tree(trees = tune(),
min_n = tune(),
learn_rate = tune()) %>%
set_mode("classification") %>%
set_engine("xgboost")
# Chunk 7
boosted_grid <- grid_regular(parameters(tidy_boosted_model), levels = 3)
boosted_tune <- tune_grid(tidy_boosted_model,
tidy_rec,
resamples = tidy_kfolds,
grid = boosted_grid)
boosted_params <- boosted_tune %>%
select_best("roc_auc")
# Chunk 8
tidy_boosted_model <- finalize_model(tidy_boosted_model, boosted_params)
# Chunk 9
boosted_workflow <- workflow() %>%
add_model(tidy_boosted_model) %>%
add_recipe(tidy_rec)
# Chunk 10
boosted_results <- last_fit(boosted_workflow, tidy_split)
# Chunk 11
boosted_results %>%
unnest(.predictions) %>%
conf_mat(truth = species, estimate = .pred_class)
# Chunk 12
final_boosted_model <- fit(boosted_workflow, penguins)
saveRDS(final_boosted_model, "penguin_model.RDS")
runApp('R')
runApp('R')
model <- readRDS("penguin_model.RDS")
model$pre$mold$predictors
predict(model)
?predict
palmerpenguins::penguins$year
runApp('R')
runApp('R')
runApp('R')
?box
runApp('R')
runApp('R')
runApp('R')
runApp('R')
runApp('R')
runApp('R')
runApp('R')
?valueBox
runApp('R')
runApp('R')
runApp('R')
?dashboardSidebar
runApp('R')
runApp('R')
?box
runApp('R')
runApp('R')
?offset
runApp('R')
?box
runApp('R')
runApp('R')
runApp('R')
runApp('R')
runApp('R')
runApp('R')
runApp('R')
runApp('R')
runApp('R')
runApp('R')
runApp('R')
runApp('R')
runApp('R')
runApp('R')
runApp('R')
runApp('R')
runApp('R')
runApp('R')
runApp('R')
runApp('R')
runApp('R')
penguins %>%
pivot_longer(cols = bill_length_mm:body_mass_g, names_to = "metric", values_to = "value") %>%
ggplot(aes(species, value, color = sex)) +
geom_boxplot() +
facet_wrap(~ metric, scales = "free")
penguins %>%
summary()
penguins %>%
mutate(across(everything()), sum(is.na(.)))
penguins %>%
mutate(across(everything()), ~ sum(is.na(.)))
penguins %>%
mutate(across(everything()),  function(x) sum(is.na(x)))
penguins %>%
mutate(across(everything()),  ~ function(x) sum(is.na(x)))
colSums(is.na(penguins))
library(tidyverse)
library(tidymodels)
library(palmerpenguins)
theme_set(theme_light())
colSums(is.na(penguins))
penguins %>%
filter(is.na(sex)) %>%
count(species)
penguins %>%
count(species)
penguins %>%
pivot_longer(cols = bill_length_mm:body_mass_g, names_to = "metric", values_to = "value") %>%
ggplot(aes(species, value, color = sex)) +
geom_boxplot() +
facet_wrap(~ metric, scales = "free")
?step_dummy
?step_imput_median
?step_impute_median
runApp('R')
runApp('R')
boosted_results %>%
unnest(.predictions) %>%
conf_mat(truth = species, estimate = .pred_class)
boosted_results %>%
unnest(.predictions) %>%
conf_mat(truth = species, estimate = .pred_class) %>%
plot()
boosted_results %>%
unnest(.predictions) %>%
conf_mat(truth = species, estimate = .pred_class) %>%
melt()
boosted_results %>%
unnest(.predictions) %>%
conf_mat(truth = species, estimate = .pred_class) %>%
reshape::melt()
t <- boosted_results %>%
unnest(.predictions) %>%
conf_mat(truth = species, estimate = .pred_class)
t$table
boosted_results %>%
unnest(.predictions) %>%
conf_mat(truth = species, estimate = .pred_class) %>%
pull("table")
boosted_results %>%
unnest(.predictions) %>%
conf_mat(truth = species, estimate = .pred_class) %>%
pluck("table")
boosted_results %>%
unnest(.predictions) %>%
conf_mat(truth = species, estimate = .pred_class) %>%
pluck("table") %>%
reshape2::melt
boosted_results %>%
unnest(.predictions) %>%
conf_mat(truth = species, estimate = .pred_class) %>%
pluck("table") %>%
reshape2::melt()
boosted_results %>%
unnest(.predictions) %>%
conf_mat(truth = species, estimate = .pred_class) %>%
pluck("table") %>%
reshape2::melt() %>%
ggplot(aes(Truth, Prediction, fill = value)) +
geom_tile()
boosted_results %>%
unnest(.predictions) %>%
conf_mat(truth = species, estimate = .pred_class) %>%
pluck("table") %>%
reshape2::melt() %>%
ggplot(aes(Truth, Prediction, fill = value)) +
geom_tile() +
theme_light()
boosted_results %>%
unnest(.predictions) %>%
conf_mat(truth = species, estimate = .pred_class) %>%
pluck("table") %>%
reshape2::melt() %>%
ggplot(aes(Truth, Prediction, fill = value)) +
geom_tile()
boosted_results %>%
unnest(.predictions) %>%
conf_mat(truth = species, estimate = .pred_class) %>%
pluck("table") %>%
reshape2::melt() %>%
ggplot(aes(Truth, Prediction, fill = value)) +
geom_tile() +
theme(
panel.grid = element_blank()
)
boosted_results %>%
unnest(.predictions) %>%
conf_mat(truth = species, estimate = .pred_class) %>%
pluck("table") %>%
reshape2::melt() %>%
ggplot(aes(Truth, Prediction, fill = value)) +
geom_tile() +
theme(
panel.grid = element_blank(),
panel.border = element-blank()
)
boosted_results %>%
unnest(.predictions) %>%
conf_mat(truth = species, estimate = .pred_class) %>%
pluck("table") %>%
reshape2::melt() %>%
ggplot(aes(Truth, Prediction, fill = value)) +
geom_tile() +
theme(
panel.grid = element_blank(),
panel.border = element_blank()
)
boosted_results %>%
unnest(.predictions) %>%
conf_mat(truth = species, estimate = .pred_class) %>%
pluck("table") %>%
reshape2::melt() %>%
ggplot(aes(Truth, Prediction, fill = value)) +
geom_tile() +
theme(
panel.grid = element_blank(),
panel.border = element_blank(),
axis.ticks = element_blank()
)
boosted_results %>%
unnest(.predictions) %>%
conf_mat(truth = species, estimate = .pred_class) %>%
pluck("table") %>%
reshape2::melt() %>%
ggplot(aes(Truth, Prediction, fill = value)) +
geom_tile() +
theme(
panel.grid = element_blank(),
panel.border = element_blank(),
axis.ticks = element_blank()
) +
geom_text()
boosted_results %>%
unnest(.predictions) %>%
conf_mat(truth = species, estimate = .pred_class) %>%
pluck("table") %>%
reshape2::melt() %>%
ggplot(aes(Truth, Prediction, fill = value)) +
geom_tile() +
theme(
panel.grid = element_blank(),
panel.border = element_blank(),
axis.ticks = element_blank()
) +
geom_text(aes(label = value))
boosted_results %>%
unnest(.predictions) %>%
conf_mat(truth = species, estimate = .pred_class) %>%
pluck("table") %>%
reshape2::melt() %>%
ggplot(aes(Truth, Prediction, fill = value)) +
geom_tile() +
theme(
panel.grid = element_blank(),
panel.border = element_blank(),
axis.ticks = element_blank()
) +
geom_text(aes(label = value)) +
scale_fill_viridis_c()
boosted_results %>%
unnest(.predictions) %>%
conf_mat(truth = species, estimate = .pred_class) %>%
pluck("table") %>%
reshape2::melt() %>%
ggplot(aes(Truth, Prediction, fill = value)) +
geom_tile() +
theme(
panel.grid = element_blank(),
panel.border = element_blank(),
axis.ticks = element_blank()
) +
geom_text(aes(label = value)) +
scale_color_gradient(low = "white", high = "black")
boosted_results %>%
unnest(.predictions) %>%
conf_mat(truth = species, estimate = .pred_class) %>%
pluck("table") %>%
reshape2::melt() %>%
ggplot(aes(Truth, Prediction, fill = value)) +
geom_tile() +
theme(
panel.grid = element_blank(),
panel.border = element_blank(),
axis.ticks = element_blank()
) +
geom_text(aes(label = value)) +
scale_fill_gradient(low = "white", high = "black")
boosted_results %>%
unnest(.predictions) %>%
conf_mat(truth = species, estimate = .pred_class) %>%
pluck("table") %>%
reshape2::melt() %>%
ggplot(aes(Truth, Prediction, fill = value)) +
geom_tile() +
theme(
panel.grid = element_blank(),
panel.border = element_blank(),
axis.ticks = element_blank()
) +
geom_text(aes(label = value)) +
scale_fill_gradient(low = "white", high = "blue")
boosted_results %>%
unnest(.predictions) %>%
conf_mat(truth = species, estimate = .pred_class) %>%
pluck("table") %>%
reshape2::melt() %>%
ggplot(aes(Truth, Prediction, fill = value)) +
geom_tile() +
theme(
panel.grid = element_blank(),
panel.border = element_blank(),
axis.ticks = element_blank(),
legend.position = "none"
) +
geom_text(aes(label = value)) +
scale_fill_gradient(low = "white", high = "blue") +
```
boosted_results %>%
unnest(.predictions) %>%
conf_mat(truth = species, estimate = .pred_class) %>%
pluck("table") %>%
reshape2::melt() %>%
ggplot(aes(Truth, Prediction, fill = value)) +
geom_tile() +
theme(
panel.grid = element_blank(),
panel.border = element_blank(),
axis.ticks = element_blank(),
legend.position = "none"
) +
geom_text(aes(label = value)) +
scale_fill_gradient(low = "white", high = "blue")
boosted_results %>%
unnest(.predictions) %>%
conf_mat(truth = species, estimate = .pred_class) %>%
pluck("table") %>%
reshape2::melt() %>%
ggplot(aes(Truth, Prediction, fill = value)) +
geom_tile(color = "black") +
theme(
panel.grid = element_blank(),
panel.border = element_blank(),
axis.ticks = element_blank(),
legend.position = "none"
) +
geom_text(aes(label = value)) +
scale_fill_gradient(low = "white", high = "blue")
boosted_results %>%
unnest(.predictions) %>%
conf_mat(truth = species, estimate = .pred_class) %>%
pluck("table") %>%
reshape2::melt() %>%
ggplot(aes(Truth, Prediction, fill = value)) +
geom_tile(color = "black", size = 2) +
theme(
panel.grid = element_blank(),
panel.border = element_blank(),
axis.ticks = element_blank(),
legend.position = "none"
) +
geom_text(aes(label = value)) +
scale_fill_gradient(low = "white", high = "blue")
boosted_results %>%
unnest(.predictions) %>%
conf_mat(truth = species, estimate = .pred_class) %>%
pluck("table") %>%
reshape2::melt() %>%
ggplot(aes(Truth, Prediction, fill = value)) +
geom_tile(color = "black", size = 1) +
theme(
panel.grid = element_blank(),
panel.border = element_blank(),
axis.ticks = element_blank(),
legend.position = "none"
) +
geom_text(aes(label = value)) +
scale_fill_gradient(low = "white", high = "blue")
boosted_results %>%
unnest(.predictions) %>%
conf_mat(truth = species, estimate = .pred_class) %>%
pluck("table") %>%
reshape2::melt() %>%
ggplot(aes(Truth, Prediction, fill = value)) +
geom_tile(color = "black", size = 1) +
theme(
panel.grid = element_blank(),
panel.border = element_blank(),
axis.ticks = element_blank(),
legend.position = "none"
) +
geom_text(aes(label = value)) +
scale_fill_gradient(low = "white", high = "blue") +
scale_y_discrete(limits = rev)
boosted_results %>%
unnest(.predictions) %>%
conf_mat(truth = species, estimate = .pred_class) %>%
pluck("table") %>%
reshape2::melt() %>%
ggplot(aes(Truth, Prediction, fill = value)) +
geom_tile(color = "black", size = 1) +
theme(
panel.grid = element_blank(),
panel.border = element_blank(),
axis.ticks = element_blank(),
legend.position = "none"
) +
geom_text(aes(label = value)) +
scale_fill_gradient(low = "white", high = "blue") +
scale_y_discrete(limits = rev) +
labs(
title = "Palmer Penguins Confusion Matrix"
)
boosted_results %>% unnest_wider(.predictions)
boosted_results %>% unnest_wider(.predictions) %>% conf_mat(truth = species, estimate = .pred_class)
boosted_results %>% unnest_longer(.predictions) %>% conf_mat(truth = species, estimate = .pred_class)
boosted_results %>% unnest_longer(.predictions)
boosted_results %>% unnest(.predictions)
?unnest
boosted_results
boosted_results %>% unnest(.metrics)
boosted_results %>%
unnest(.predictions) %>%
conf_mat(truth = species, estimate = .pred_class) %>%
pluck("table") %>%
reshape2::melt() %>%
ggplot(aes(Truth, Prediction, fill = value)) +
geom_tile(color = "black", size = 1) +
theme(
panel.grid = element_blank(),
panel.border = element_blank(),
axis.ticks = element_blank(),
legend.position = "none"
) +
geom_text(aes(label = value)) +
scale_fill_gradient(low = "white", high = "blue") +
scale_y_discrete(limits = rev) +
labs(
title = "Palmer Penguins Confusion Matrix"
)
boosted_results %>%
unnest(.metrics)
boosted_results %>%
unnest(.metrics) %>%
select(.metric, .estimate)
palmerpenguins::penguins
vegan::metaMDS(penguins %>% select(-c(year)))
vegan::metaMDS(penguins %>% select(-c(year, Adelie, island)))
vegan::metaMDS(penguins %>% select(-c(year, species, island)))
vegan::metaMDS(penguins %>% select(-c(year, species, island)))
penguins
vegan::metaMDS(penguins %>% select(-c(year, species, island, sex)))
t <- vegan::metaMDS(penguins %>% select(-c(year, species, island, sex)))
t %>% plot()
t
as.data.frame(scores(t, display = "sites"))
as.data.frame(vegan::scores(t, display = "sites"))
as.data.frame(vegan::scores(t, display = "sites")) %>%
bind_cols(penguins)
as.data.frame(vegan::scores(t, display = "sites")) %>%
bind_cols(penguins) %>%
ggplot(aes(NMDS1, NMDS2)) +
geom_point()
as.data.frame(vegan::scores(t, display = "sites")) %>%
bind_cols(penguins) %>%
ggplot(aes(NMDS1, NMDS2, color = species)) +
geom_point()
penguin.NMDS <- vegan::metaMDS(penguins %>% select(-c(year, species, island, sex)))
penguin.NMDS
boosted_results %>%
unnest(.metrics) %>%
select(.metric, .estimate)
library(vegan)
penguin.NMDS <- metaMDS(penguins %>% select(-c(year, species, island, sex)))
penguin.NMDS$stress
library(vegan)
penguin.NMDS <- metaMDS(penguins %>% select(-c(year, species, island, sex)), k = 3)
penguin.NMDS$stress
penguin.NMDS %>%
ggplot(aes(NMDS1, NMDS2, color = species)) +
geom_point()
penguin.NMDS <- as.data.frame(vegan::scores(penguin.NMDS, display = "sites")) %>%
bind_cols(penguins)
penguin.NMDS %>%
ggplot(aes(NMDS1, NMDS2, color = species)) +
geom_point()
penguin.NMDS %>%
ggplot(aes(NMDS1, NMDS2, color = species)) +
geom_point() +
labs(
color = "Species"
)
penguin.NMDS %>%
ggplot(aes(NMDS1, NMDS2, color = species)) +
geom_point(size = 1) +
labs(
color = "Species",
title = "Palmer Penguins NMDS"
)
penguin.NMDS %>%
ggplot(aes(NMDS1, NMDS2, color = species)) +
geom_point(size = 2) +
labs(
color = "Species",
title = "Palmer Penguins NMDS"
)
runApp('R')
runApp('R')
runApp('R')
